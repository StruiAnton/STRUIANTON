.486
.model flat, stdcall
option casemap :none 
include windows.inc
include kernel32.inc
include masm32.inc
includelib kernel32.lib
includelib masm32.lib
.data
	inputBuffer db 0
	buffer db 1000 dup(" ")
	perexodnanowyustroky db 0DH,0AH
	probel db 020H
	show db "Cformirovan massiv"
	show1 db "Izmen massiv"
	sum db "summa massiv"
	sum1 db "nowaR summa massiva"
.data?                                    
	inputHandle dd ?
	outputHandle dd ?
	numberOfChars dd ?
	Massiv dd ?	 
.code 

f:
  	mov EDI,1
	MOV EBX, offset Massiv   
        MOV ESI, 0        
        Nachalo:
        CMP ESI, 101       
        JNL Konec
        mov EAX, 101
	mov EDX,0 
	div EDI
	INC EDX
	mov dword ptr [EBX], EDX
        INC EDI
        INC ESI          
        ADD EBX, 4        
        JMP Nachalo
        Konec:
RET

f1:
        MOV EBX, offset Massiv   
        MOV ESI, 0        
        Nachalo1:
        CMP ESI, 101       
        JNL Konec1
        MOV EAX,dword ptr [EBX]
        push offset buffer
        push EAX           
        call dwtoa
        push offset buffer       
                          
        call lstrlen              
                         
        push NULL
        push offset numberOfChars
        push EAX                  
                         
        push offset buffer
        push outputHandle
        call WriteConsole
        
        push NULL                 
	push offset numberOfChars 
	push 1                   
	push offset probel 
	push outputHandle         
	call WriteConsole
            
        INC ESI          
        ADD EBX, 4        
        JMP Nachalo1  
        Konec1:
RET

f2:     
        MOV EAX,0
        MOV EBX, offset Massiv   
        MOV ESI, 0       
        Nachalo2:
        CMP ESI, 101        
        JNL Konec2
        add EAX,dword ptr [EBX]     
        INC ESI           
        ADD EBX, 4        
        JMP Nachalo2
        Konec2:
RET

f3:
    MOV ESI, 1
    MOV EBX, offset Massiv
Nachalo3:
    CMP ESI, 100
    JNLE Konec3
    mov EAX,dword ptr [EBX]
    ADD EBX, 4
    MOV EDI,dword ptr [EBX]
    ;//////////////////|x-y|/////////
    sub EAX,EDI
    CMP EAX, 0
    JL  Metka1
    JMP Metka2
    Metka1:
    NEG EAX
    Metka2:
    ;///////////max(10,chislo3)/////////////////;ECX
    CMP EAX,10
    JG Metka7
    JMP Metka8
    Metka7:
    MOV ECX, EAX
    JMP Metka9
    Metka8:
    MOV ECX, 10
    Metka9:
    ;/////////// max(x,y)////////;EDX
    sub EBX,4
    mov EAX,dword ptr [EBX]
    add EBX,4
    mov EDI,dword ptr [EBX]
    CMP EAX,EDI
    JG Metka10
    JMP Metka11
    Metka10:
    MOV EDX,EAX
    JMP Metka12
    Metka11:
    MOV EDX,EDI
    Metka12: 
    ;//////////min(chislo4,chislo5)/////////;EAX
    CMP ECX,EDX
    JG Metka13
    JMP Metka14
    Metka13:
    MOV EAX,EDX
    JMP Metka15
    Metka14:
    MOV EAX,ECX
    Metka15:
    ;///////min(x,y)//////////////;EDX
    sub EBX,4
    mov ECX,dword ptr [EBX]
    add EBX,4
    mov EDI,dword ptr [EBX]
    CMP ECX,EDI
    JG Metka16
    JMP Metka17
    Metka16:
    MOV EDX,EDI
    JMP Metka18
    Metka17:
    MOV EDX,ECX
    Metka18:
    ;//////////chislo6/chislo7//////////////
    CMP EDX,0
    JE MetkaA
    JMP MetkaB
    MetkaA:
    mov ECX,0
    JMP MetkaC
    MetkaB:
    mov edi,edx
    mov edx,eax
    mov EAX, edx
    mov EDX, 0
    div edi
    mov ECX, EAX
    MetkaC:
    sub EBX,4
    MOV dword ptr [EBX],ECX
    add EBX,4    
    INC ESI
    JMP Nachalo3
Konec3:
    mov dword ptr [EBX],2  
RET

entryPoint:

	push STD_INPUT_HANDLE    
	call GetStdHandle         
	mov inputHandle, EAX     
	
	push STD_OUTPUT_HANDLE
	call GetStdHandle
	mov outputHandle, EAX
	
        call f
        
        push NULL                 
	push offset numberOfChars 
	push 18                  
	push offset show 
	push outputHandle         
	call WriteConsole
	
	push NULL                 
	push offset numberOfChars 
	push 2                   
	push offset perexodnanowyustroky 
	push outputHandle         
	call WriteConsole
	
        call f1
        
        push NULL                 
	push offset numberOfChars 
	push 2                   
	push offset perexodnanowyustroky 
	push outputHandle         
	call WriteConsole
        
        push NULL                 
	push offset numberOfChars 
	push 12                  
	push offset sum 
	push outputHandle         
	call WriteConsole
	
	push NULL                 
	push offset numberOfChars 
	push 2                   
	push offset perexodnanowyustroky 
	push outputHandle         
	call WriteConsole
	
	call f2
	push offset buffer
        push EAX           
        call dwtoa
        push offset buffer
        call lstrlen              
                         
        push NULL
        push offset numberOfChars
        push EAX                  
                         
        push offset buffer
        push outputHandle
        call WriteConsole
        
        push NULL                 
	push offset numberOfChars 
	push 2                   
	push offset perexodnanowyustroky 
	push outputHandle         
	call WriteConsole
	
	call f3
	
	push NULL                 
	push offset numberOfChars 
	push 12                   
	push offset show1 
	push outputHandle         
	call WriteConsole
	
	push NULL                 
	push offset numberOfChars 
	push 2                   
	push offset perexodnanowyustroky 
	push outputHandle         
	call WriteConsole
	
	call f1
	
	push NULL                 
	push offset numberOfChars 
	push 2                   
	push offset perexodnanowyustroky 
	push outputHandle         
	call WriteConsole
	
	push NULL                 
	push offset numberOfChars 
	push 19                   
	push offset sum1
	push outputHandle         
	call WriteConsole
	
	push NULL                 
	push offset numberOfChars 
	push 2                   
	push offset perexodnanowyustroky 
	push outputHandle         
	call WriteConsole
	
	call f2
	push offset buffer
        push EAX           
        call dwtoa
        push offset buffer
        call lstrlen              
                         
        push NULL
        push offset numberOfChars
        push EAX                  
                         
        push offset buffer
        push outputHandle
        call WriteConsole
	
	push NULL                 
	push offset numberOfChars 
	push 2                   
	push offset perexodnanowyustroky 
	push outputHandle         
	call WriteConsole

	push offset numberOfChars
	push 1
	push offset inputBuffer
	push inputHandle
	call ReadConsole

	push 0
	call ExitProcess

end entryPoint